name: "Terraform Deploy Only"

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  terraform_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra

    env:
      # ðŸŸ¡ Azure
      TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
      TF_VAR_location: ${{ vars.LOCATION }}
      TF_VAR_resource_group_name: ${{ vars.RESOURCE_GROUP }}

      # ðŸ§  Naming
      TF_VAR_author: ${{ vars.AUTHOR }}
      TF_VAR_resource_prefix: ${{ vars.RESOURCE_PREFIX }}

      # ðŸŸ  Images
      TF_VAR_fe_image_name: ${{ vars.FE_IMAGE_NAME }}
      TF_VAR_fe_tag: ${{ vars.FE_TAG }}
      TF_VAR_be_image_name: ${{ vars.BE_IMAGE_NAME }}
      TF_VAR_be_tag: ${{ vars.BE_TAG }}
      #sql server
      TF_VAR_sql_admin_login: ${{ secrets.SQL_ADMIN_LOGIN }}
      TF_VAR_sql_admin_password: ${{ secrets.SQL_ADMIN_PASSWORD }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Import Existing Resources
        working-directory: infra
        run: |
          # Resource Group
          terraform import azurerm_resource_group.resource_group \
          /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP }} || true
          
          # Service Plan (Frontend)
          terraform import 'azurerm_service_plan.frontend_plan' \
          /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP }}/providers/Microsoft.Web/serverFarms/${{ vars.RESOURCE_PREFIX }}-fe-service-plan-${{ vars.AUTHOR }} || true

          # Web App (Frontend)
          terraform import 'azurerm_linux_web_app.frontend_app' \
          /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP }}/providers/Microsoft.Web/sites/${{ vars.RESOURCE_PREFIX }}-fe-app-${{ vars.AUTHOR }} || true

          # Service Plan (backend)
          terraform import 'azurerm_service_plan.backend_plan' \
          /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP }}/providers/Microsoft.Web/serverFarms/${{ vars.RESOURCE_PREFIX }}-be-service-plan-${{ vars.AUTHOR }} || true

          # Web App (backend)
          terraform import 'azurerm_linux_web_app.backend_app' \
          /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP }}/providers/Microsoft.Web/sites/${{ vars.RESOURCE_PREFIX }}-be-app-${{ vars.AUTHOR }} || true
          #sql server 
          terraform import 'azurerm_mssql_server.sql_server' \
          /subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/${{ vars.RESOURCE_GROUP }}/providers/Microsoft.Sql/servers/ecommerce-sqlserver-aalhatlan || true


      - name: Terraform Apply
        run: terraform apply -auto-approve
