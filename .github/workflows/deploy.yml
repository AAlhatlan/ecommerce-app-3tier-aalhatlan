name: "Build & Deploy Frontend + Backend + Infra (DockerHub)"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BE_IMAGE: "${{ secrets.DOCKERHUB_USERNAME }}/assignment-be"
  FE_IMAGE: "${{ secrets.DOCKERHUB_USERNAME }}/assignment-fe"
  LOCATION: "westeurope"

jobs:
  build_frontend:
    name: "Build and Push Frontend"
    runs-on: ubuntu-latest
    outputs:
      frontend_version: ${{ steps.version.outputs.frontend }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Frontend Version
        id: version
        run: echo "frontend=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./ecommerce-app-frontend
          push: true
          tags: |
            ${{ env.FE_IMAGE }}:${{ steps.version.outputs.frontend }}
            ${{ env.FE_IMAGE }}:latest

  build_backend:
    name: "Build and Push Backend"
    runs-on: ubuntu-latest
    needs: build_frontend
    outputs:
      backend_version: ${{ steps.version.outputs.backend }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Backend Version
        id: version
        run: echo "backend=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./ecommerce-app-backend
          push: true
          tags: |
            ${{ env.BE_IMAGE }}:${{ steps.version.outputs.backend }}
            ${{ env.BE_IMAGE }}:latest

  terraform_deploy:
    name: "Deploy Infrastructure with Terraform"
    runs-on: ubuntu-latest
    needs: [build_frontend, build_backend]
    defaults:
      run:
        working-directory: infra
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Azure Login (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: |
          terraform apply -auto-approve \
            -var="frontend_image=${{ env.FE_IMAGE }}:${{ needs.build_frontend.outputs.frontend_version }}" \
            -var="backend_image=${{ env.BE_IMAGE }}:${{ needs.build_backend.outputs.backend_version }}" \
            -var="resource_group_name=${{ vars.RESOURCE_GROUP }}" \
            -var="location=${{ vars.LOCATION }}" \
            -var="project_name=${{ vars.PROJECT_NAME }}" \
            -var="sql_admin_login=${{ secrets.SQL_ADMIN_LOGIN }}" \
            -var="sql_admin_password=${{ secrets.SQL_ADMIN_PASSWORD }}" \
            -var="aca_subnet_id=${{ vars.ACA_SUBNET_ID }}" \
            -var="sql_fqdn=${{ vars.SQL_FQDN }}"




