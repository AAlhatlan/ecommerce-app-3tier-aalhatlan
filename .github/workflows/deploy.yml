name: "Build & Push Frontend + Backend Images"

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  BE_IMAGE: "${{ secrets.DOCKERHUB_USERNAME }}/assignment-be"
  FE_IMAGE: "${{ secrets.DOCKERHUB_USERNAME }}/assignment-fe"

jobs:
  build_frontend:
    name: Build & Push Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Version
        id: version
        run: echo "frontend=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ†• Step 1: Generate Backend URL dynamically
      - name: Generate Backend URL
        id: backend_url
        run: |
          BACKEND_URL="${{ vars.RESOURCE_PREFIX }}-be-app-${{ vars.AUTHOR }}.azurewebsites.net"
          echo "backend_url=$BACKEND_URL" >> $GITHUB_OUTPUT

      # ðŸ†• Step 2: Build & Push Frontend with dynamic API URL
      - name: Build & Push Frontend
        run: |
          docker build --platform linux/amd64 \
            --build-arg REACT_APP_API_URL=https://${{ steps.backend_url.outputs.backend_url }}/api \
            -t ${{ env.FE_IMAGE }}:${{ steps.version.outputs.frontend }} \
            -t ${{ env.FE_IMAGE }}:latest \
            ./ecommerce-app-frontend

          docker push ${{ env.FE_IMAGE }}:${{ steps.version.outputs.frontend }}
          docker push ${{ env.FE_IMAGE }}:latest

  build_backend:
    name: Build & Push Backend
    runs-on: ubuntu-latest
    needs: build_frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Generate Version
        id: version
        run: echo "backend=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push Backend
        uses: docker/build-push-action@v6
        with:
          context: ./ecommerce-app-backend
          push: true
          tags: |
            ${{ env.BE_IMAGE }}:${{ steps.version.outputs.backend }}
            ${{ env.BE_IMAGE }}:latest
